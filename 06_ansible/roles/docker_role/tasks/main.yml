# - name: Ensure Docker is installed
#   apt:
#     name: 
#       - docker.io
#       - docker-compose-plugin
#     state: present
#     update_cache: yes
#   become: true
  
# - name: Ensure Docker service is started and enabled
#   service:
#     name: docker
#     state: started
#     enabled: true
#   become: true

# - name: Check if external Docker network exists
#   command: docker network inspect "{{ network }}"
#   register: network_check
#   ignore_errors: true
#   changed_when: false

# - name: Create external Docker network if it does not exist
#   when: network_check.rc != 0
#   docker_network:
#     name: "{{ network }}"
#     driver: bridge
#     attachable: true
#     state: present


- name: Add Docker GPG apt Key
  apt_key:
    url: https://download.docker.com/linux/ubuntu/gpg
    state: present
  become: true

- name: Add Docker repository
  apt_repository:
    repo: deb [arch=amd64] https://download.docker.com/linux/ubuntu focal stable
    state: present
    filename: docker
  become: true

- name: Install Docker and docker-compose-plugin
  apt:
    name:
      - docker-ce
      - docker-ce-cli
      - containerd.io
      - docker-buildx-plugin
      - docker-compose-plugin
    state: present
    update_cache: yes
  become: true

- name: Ensure Docker service is started and enabled
  service:
    name: docker
    state: started
    enabled: true
  become: true

- name: Check if docker compose plugin is installed
  stat:
    path: /usr/libexec/docker/cli-plugins/docker-compose
  register: compose_plugin

- name: Install Docker Compose standalone if plugin missing
  when: not compose_plugin.stat.exists
  get_url:
    url: https://github.com/docker/compose/releases/latest/download/docker-compose-{{ ansible_system | lower }}-{{ ansible_architecture }}
    dest: /usr/local/bin/docker-compose
    mode: '0755'
  become: true

- name: Check if external Docker network exists
  command: docker network inspect "{{ network }}"
  register: network_check
  ignore_errors: true
  changed_when: false

- name: Create external Docker network if it does not exist
  when: network_check.rc != 0
  docker_network:
    name: "{{ network }}"
    driver: bridge
    attachable: true
    state: present